[
	{
		"code"   : "planner",
		"name"   : "Planner",
		"details": "An example of a full 2D planner, developed in only 1 month!",
		"comment": "2D Room planner",
		"type"   : "advanced official",
		"folder" : "09_Planner",
		"version": "cgscenegraph_1.4.2.min.js",
		"mainjs" : "planner_1.0.0.min.js",
		"width"  : 1200,
		"height" : 800
	},
	{
		"code"   : "catch",
		"name"   : "'Catch Flowers' game",
		"details": "A (almost) complete game ! Avoid the bees and catch all the flowers :) <br/>(Game developed in 1.5 day)",
		"comment": "A touch game",
		"type"   : "advanced official",
		"folder" : "05_Game_CatchTheFlowers",
		"version": "cgscenegraph_1.4.2.min.js",
		"addedJS": ["globals.js", "sprites/sprite.live.js", "sprites/sprite.sun.js", "sprites/sprite.stars.js",
		            "node.sky.js", "node.floor.js", "sprites/sprite.Button.js", "sprites/sprite.flower.js",
		            "sprites/sprite.cloud.js", "sprites/sprite.bee.js",
		            "node.livePanel.js", "node.scorePanel.js", "states/state.about.js", "states/state.home.js",
		            "states/state.loading.js", "states/state.game.run.js"],
		"width"  : 480,
		"height" : 320
	},
	{
		"code"   : "pixelator",
		"name"   : "Pixelator",
		"details": "",
		"comment": "Destroy a picture",
		"type"   : "advanced official",
		"folder" : "08_pixelator"
	},
	{
		"code"   : "circles",
		"name"   : "Animated circles",
		"details": "A simple animated circles example",
		"comment": "A simple animated circles example",
		"type"   : "anim official",
		"folder" : "03_Animation/animation_05_Circles"
	},
	{
		"code"   : "fountain",
		"name"   : "Fountain",
		"details": "Use of particles system of SceneGraph.js to easily simulate a fountain",
		"comment": "Fountain with Particle System node",
		"type"   : "advanced official",
		"folder" : "04_Advanced/01_Particles_Fountain"
	},
	{
		"code"   : "fire",
		"name"   : "Particles fire",
		"details": "Use of integrated Particles system to easily simulate a fountain",
		"comment": "Fire with Particle System node",
		"type"   : "advanced official",
		"folder" : "04_Advanced/02_Particles_Fire"
	},
	{
		"code"   : "particlesimage",
		"name"   : "Snow (particles)",
		"details": "Use of integrated Particles system to simulate falling snow.",
		"comment": "Snow with images & Particle System",
		"type"   : "advanced official",
		"folder" : "04_Advanced/03_Particles_Images",
		"addedJS": ["node.sky.js"]
	},
	{
		"code"   : "tiles",
		"name"   : "Image tiles",
		"details": "Tiles example",
		"comment": "Tiles example",
		"type"   : "basic official",
		"folder" : "01_Basic_Shapes/05_Images/02_Tiles"
	},
	{
		"code"   : "sprites",
		"name"   : "Animated Sprites",
		"details": "Animated sprites example",
		"comment": "Animated sprites example",
		"type"   : "basic official",
		"folder" : "01_Basic_Shapes/06_AnimatedSprites/animatedSprite_01_simple"
	},
	{
		"code"   : "multisprites",
		"name"   : "Multi Sprites",
		"details": "Multi sprites examples (from same picture)",
		"comment": "Multi sprites examples",
		"type"   : "basic official",
		"folder" : "01_Basic_Shapes/06_AnimatedSprites/animatedSprite_02_multiple_same_image"
	},
	{
		"code"   : "character",
		"name"   : "Animated player",
		"details": "Complete animated character example",
		"comment": "Complete animated character example",
		"type"   : "basic official",
		"folder" : "01_Basic_Shapes/06_AnimatedSprites/animatedSprite_03_complete_character"
	},
	{
		"code"   : "zindex",
		"name"   : "Z-Index",
		"details": "",
		"comment": "Z-Index manipulation.",
		"type"   : "advanced official",
		"folder" : "07_zindex"
	},
	{
		"code"   : "themes",
		"name"   : "CSS themes",
		"details": "SceneGraph.js support CSS in its core.<br/><p>It's very easy to load CSS files at runtime and to play with CSS classes and attributes.</p>Other examples are provided with the framework to show how easy it is to manipulate CSS with SceneGraph.js.",
		"comment": "CSS switching",
		"type"   : "css official",
		"folder" : "14_CSS/04_CustomTHeme"
	},
	{
		"code"   : "text",
		"name"   : "Text node",
		"details": "Text node uses CSS to be customized. <br/>Several CSS classes already defined: 'h1', 'h2', 'h3', 'h4', 'h5', 'h6' and 'p'.",
		"comment": "Powerful text node. Use CSS.",
		"type"   : "basic official",
		"folder" : "01_Basic_Shapes/01_Text_01_Simple"
	},
	{
		"code"   : "square",
		"name"   : "Square Node",
		"details": "Basic Square node example.",
		"comment": "Basic (round) Square node example",
		"type"   : "basic official",
		"folder" : "01_Basic_Shapes/02_Square"
	},
	{
		"code"   : "circle",
		"name"   : "Circle node",
		"details": "Basic Circle node example.",
		"comment": "Basic Circle node example",
		"type"   : "basic official",
		"folder" : "01_Basic_Shapes/03_Circle"
	},
	{
		"code"   : "ellipse",
		"name"   : "Ellipse node",
		"details": "Basic Ellipse node example",
		"comment": "Basic ELlipse Node example",
		"type"   : "basic official",
		"folder" : "01_Basic_Shapes/04_Ellipse"
	},
	{
		"code"   : "image",
		"name"   : "Image node",
		"details": "Basic Image Example",
		"comment": "Basic Image example",
		"type"   : "basic official",
		"folder" : "01_Basic_Shapes/05_Images/01_Simple"
	},

	{
		"code"    : "button",
		"name"    : "Button Node",
		"details" : "Customizable Button node",
		"comment" : "Customizable Button node",
		"type"    : "basic official",
		"folder"  : "01_Basic_Shapes/08_Button",
		"addedCSS": "examples/shared/css/style.css",
		"addedJS" : ""
	},
	{
		"code"   : "colorpicker",
		"name"   : "Color Picker",
		"details": "Computed color picker (not based on pre-computed picture) to be very accurate and smooth, whatever its size.s",
		"comment": "Computed Color Picker",
		"type"   : "basic official",
		"folder" : "01_Basic_Shapes/09_ColorPicker"
	},
	{
		"code"   : "slider",
		"name"   : "Slider Node",
		"details": "",
		"comment": ".",
		"type"   : "basic official",
		"folder" : "01_Basic_Shapes/11_Slider"
	},

	{
		"code"   : "touch",
		"name"   : "Mouse & touch",
		"details": "Mouse & Touch example",
		"comment": "EventManager example",
		"type"   : "event official",
		"folder" : "02_Events/02_eventManager"
	},
	{
		"code"   : "stress",
		"name"   : "Stress test",
		"details": "Stress test. SceneGraph.js is powerful :)",
		"comment": "Stress test.",
		"type"   : "event official",
		"folder" : "02_Events/04_StressTest"
	},

	{
		"code"   : "collision",
		"name"   : "Collision detection",
		"details": "Collision detection while animating",
		"comment": "Animation and Collision",
		"type"   : "anim official",
		"folder" : "03_Animation/animation_02_testCollision"
	},
	{
		"code"   : "multipleanims",
		"name"   : "Multiple anim.",
		"details": "Sequenced animation",
		"comment": "Sequenced animation",
		"type"   : "anim official",
		"folder" : "03_Animation/animation_03_Multiple"
	},
	{
		"code"   : "precomputedanims",
		"name"   : "Stored animation",
		"details": "Precomputed animation: compute animation once and play it on several nodes",
		"comment": "Precomputed animation",
		"type"   : "anim official",
		"folder" : "03_Animation/animation_04_Precompute"
	},

	{
		"code"   : "traverser",
		"name"   : "Traverser",
		"details": "A Traverser is a helper class which traverse all (or a branch of) the graph to retrieve list of specific nodes (based on custom condition)",
		"comment": "Traverser example",
		"type"   : "advanced official",
		"folder" : "04_Advanced/04_Traverser"
	},
	{
		"code"   : "displayratio",
		"name"   : "Display ratio",
		"details": "Display ratio example. Resize window to see how it works.",
		"comment": "Display ratio",
		"type"   : "advanced official",
		"folder" : "04_Advanced/05_DisplayRatio"
	}
]